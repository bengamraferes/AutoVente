@model AutoVente.ViewsModels.SearchViewModel
@using AutoVente.Extensions
@using AutoVente.Models

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>

<section class="search d-flex flex-column align-content-center">

    @using (Html.BeginForm())
    {


        <div class="d-flex flex-column align-items-center justify-content-center ">



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row mb-4 col-lg-8 col-md-10 col-sm-12 p-2">
                <div class="col-lg-4 col-md-12 col-sm-12">
                    <label class="form-label" for="form6Example1">Marque </label>
                    <div class="form-outline">
                        <select class="form-control" aria-label=".form-select-lg example " name="MarqueId">
                            <option disabled selected>Nom de la marque</option>
                            @foreach (var marque in Model.Marques)
                            {
                                <option value="@marque.Id">@marque.Nom</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-lg-4 col-md-12 col-sm-12">
                    <label class="form-label" for="form6Example1">Model </label>
                    <div class="form-outline">
                        <select class="form-control" aria-label=".form-select-lg example " name="ModelId">
                            <option disabled selected>Nom du model</option>
                            @foreach (var item in Model.Models)
                            {
                                <option value="@item.Id">@item.Nom</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-lg-4 col-md-12  col-sm-12">
                    @Html.LabelFor(model => model.Etat, htmlAttributes: new { @class = "form-label control-label col-md-2" })
                    <div class="form-outline">
                        @Html.EnumDropDownListFor(model => model.Etat, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Etat, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="row mb-4 col-lg-8 col-md-10 col-sm-12 p-2">

                <div class="col-lg-4 col-md-6 col-sm-12">
                    <label class="form-label" for="form6Example1">Prix </label>
                    <div id="nonlinear" class="col"></div>
                    <div class="col">

                        <label class="form-label" for="PrixMin">Min</label>
                        <div>
                            @Html.EditorFor(model => model.PrixMin, new { htmlAttributes = new { @class = "form-control", @id = "input-numberMin" } })
                            @Html.ValidationMessageFor(model => model.PrixMin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        <label class="form-label" for="PrixMax">Max</label>
                        <div>
                            @Html.EditorFor(model => model.PrixMax, new { htmlAttributes = new { @class = "form-control", @id = "input-number" } })
                            @Html.ValidationMessageFor(model => model.PrixMax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 col-sm-12">
                    <label class="form-label" for="Annees">Années </label>
                    <div id="nonlinearAnnee" class="col"></div>
                    <div class="col">
                        <label class="form-label" for="AnneeMin">Min</label>
                        <div>
                            @Html.EditorFor(model => model.AnneeMin, new { htmlAttributes = new { @class = "form-control", @id = "input-numberMinAnnee" } })
                            @Html.ValidationMessageFor(model => model.AnneeMin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col">
                        <label class="form-label" for="AnneeMax">Max</label>
                        <div>
                            @Html.EditorFor(model => model.AnneeMax, new { htmlAttributes = new { @class = "form-control", @id = "input-numberAnnee" } })
                            @Html.ValidationMessageFor(model => model.AnneeMax, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4 col-md-12 col-sm-12">
                    <label class="form-label" for="kilometrage ">kilométrage</label>
                    <div id="nonlinearKilometrage" class="col-md-12"></div>
                    <div class="col col-md-12">
                        <label class="form-label" for="kilometrageMin">Min </label>
                        <div class="">
                            @Html.EditorFor(model => model.kilometrageMin, new { htmlAttributes = new { @class = "form-control", @id = "input-numberMinKilometrrage" } })
                            @Html.ValidationMessageFor(model => model.kilometrageMin, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col col-md-12">
                        <label class="form-label" for="kilometrageMax">Max</label>
                        <div class="">
                            @Html.EditorFor(model => model.kilometrageMax, new { htmlAttributes = new { @class = "form-control", @id = "input-numberKilometrrage" } })
                            @Html.ValidationMessageFor(model => model.kilometrageMax, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="row mb-4 col-lg-8 col-md-10 col-sm-12 p-2">
                <div class="col-lg-4 col-md-12 col-sm-12">
                    @Html.LabelFor(model => model.Carburent, htmlAttributes: new { @class = "form-label control-label col-md-2" })
                    <div class="form-outline">
                        @Html.EnumDropDownListFor(model => model.Carburent, htmlAttributes: new { @class = "form-control", @selected = "Essence" })
                        @Html.ValidationMessageFor(model => model.Carburent, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="col-lg-4 col-md-12 col-sm-12">
                    <label class="form-label" for="BoiteVitesse">Boite de vitesse </label>                    <div class="form-outline">
                        @Html.EnumDropDownListFor(model => model.BoiteVitesse, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BoiteVitesse, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4 col-md-12 col-sm-12">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "form-label control-label col-md-2" })
                    <div class="form-outline">
                        @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row mb-4 col-lg-8 col-md-10 col-sm-12 p-2">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Valider" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</section>
<div class="container">
    <div class="card-deck row ">

        @foreach (Vehicule item in Model.Vehicules)
        {
          
            string url = "https://demo.vehica.com/wp-content/uploads/2020/08/6.jpg";
            if (item.Photos.Count() > 0)
            {
             
                url = item.Photos.SingleOrDefault(p => p.Numero == 1).Url.ToString();

            }
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-4  mb-4">
                <a class="card" href="@Url.Action("DetailVehicule","Home",item)">
                    <div class="star">
                        <i class="far fa-heart fa-2x"></i>
                    </div>
                    <img class="card-img-top" src="@url" alt="Card image cap">
                    <div class="card-body">
                        <h6 class="card-title"> @item.Model.Marque.Nom @item.Model.Nom @item.Model.Annee</h6>
                        <div class="card-text prix">@item.Prix € </div>
                        <div class="card-text info-card d-flex justify-content-start"> <div class="p-1">@item.Model.PuissanceReel cv</div> <div class="p-1">@item.Model.Carburent</div> <div class="p-1"> @item.Kilometrage km</div></div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

<script>
    let stars = document.querySelectorAll(".star");

    stars.forEach((e) => {

        console.log(e.childNodes);
        e.addEventListener("click", ec => {
            let i = e.childNodes[1];
            console.log(i)

            if (i.classList.contains('fas')) {
                i.classList.remove('fas')

            }
            else {
                i.classList.add('fas');
            }

        })
    })

</script>
